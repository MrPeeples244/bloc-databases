1. List the commands for adding, updating, and deleting data.

A. Adding data is done with INSERT INTO, updating data is done with UPDATE, and deleting data is done with DELETE.

2. Explain the structure for each type of command.

A. Adding Data:
INSERT INTO "tableName" (column label1, column label2)
VALUES
(val1, val2);

or

INSERT INTO "tableName" VALUES (val1, val2);

Updating Data:
UPDATE 'tableName' SET 'whatever you need to change' WHERE 'any clauses go';

Deleting Data:
DELETE FROM 'tableName' WHERE someColumnName=someValue;


3. What are some of the data types that can be used in tables? Give a real-world example of each type.

A. Text types is useful anytime your are dealing with people's names, date types such as timestamp or interval are handy whenever data is time-relevant.
There are many choices to choose from when it comes to numbers, including smallint(2 bytes) integer(4 bytes) bigint(8 bytes). You can also use decimal in any cases
where precision is needed in measurements and such. There is also a monetary type useful for dealing with currencies, you can also use boolean as a value if
you have a binary data value.

4. Decide how to create a new table to hold a list of people invited to a wedding dinner. The table needs to have first and last names, whether they sent in
their RSVP, the number of guests they are bringing, and the number of meals (1 for adults and 1/2 for children).

Which data type would you use to store each of the following pieces of information?

First and last name. => text
Whether they sent in their RSVP. => boolean
Number of guests. => smallint
Number of meals. => numeric(2,1)

Write a command that creates the table to track the wedding dinner.

A:
CREATE TABLE dinner (
  id integer,
  firstname text,
  lastname text,
  adultcount smallint,
  childcount smallint,
  meals numeric(2,1),
  rsvp boolean
);

Write a command that adds a column to track whether the guest sent a thank you card.
A:
ALTER TABLE dinner ADD COLUMN thanks boolean;

You have decided to move the data about the meals to another table, so write a command to remove the column storing the number meals from the wedding table.
A:
ALTER TABLE dinner DROP COLUMN meals;

The guests will need a place to sit at the reception, so write a command that adds a column for table number.
A:
ALTER TABLE dinner ADD COLUMN tablenumber smallint;

The wedding is over and we do not need to keep this information, so write a command that deletes the table numbers from the database.
A:
ALTER TABLE dinner DROP COLUMN tablenumber;

5. Write a command to create a new table to hold the books in a library with the columns ISBN, title, author, genre, publishing date, number of copies,
and available copies.
A:
CREATE TABLE library (
  ISBN integer,
  title text,
  author text,
  genre text,
  publishdate date,
  copies smallint,
  available smallint
);

Find three books and add their information to the table.
A:
INSERT INTO library (ISBN, title, author, genre, publishdate, copies, available)
VALUES
(9780394820378, 'The Phantom Tollbooth', 'Norton Juster', 'Fantasy', 1961, 3, 2),
(9786074002775, 'Do Androids Dream of Electric Sheep?', 'Philip Dick', 'Sci-Fi', 1968, 2, 0),
(0679745580, 'In Cold Blood', 'Truman Capote', 'Crime', 1966, 2, 1);

Someone has just checked out one of the books. Change the number of available copies to 1 fewer.
A:
UPDATE library SET available = 0 WHERE ISBN=0679745580;

Now one of the books has been added to the banned books list. Remove it from the table.
A:
DELETE FROM library WHERE ISBN=0-679-74558-0;

6. Write a command to make a new table to hold spacecrafts. Information should include id, name, year launched, country of origin, a brief description of the mission,
orbiting body, if it is currently operating, and its approximate miles from Earth. In addition to the table creation, provide commands that perform the following operations:
A:
CREATE TABLE spacecraft (
  id integer,
  name text,
  launchyear integer,
  country text,
  mission text,
  orbiting text,
  operational boolean,
  distance float
);

Add three non-Earth-orbiting satellites to the table.
A:
INSERT INTO spacecraft (id, name, launchyear, country, mission, orbiting, operational, distance)
VALUES
(2112, 'Overture', 1976, 'Canada', 'Observe radio waves', 'Cygnus X-1', TRUE, 6,100),
(1979, 'Corgan', 1995, 'United States', 'Explore the infinite', 'Pluto', TRUE, .000628),
(1234, 'Jefferson', 1974, 'United States', 'progressive rock experiments', 'Neptune', FALSE, .0004746);

Remove one of the satellites from the table since it has just crashed into the planet.
A:
DELETE FROM spacecraft WHERE id=1234;

Edit another satellite because it is no longer operating and change the value to reflect that.
A:
UPDATE spacecraft SET operational = FALSE WHERE id=1979;

7. Write a command to create a new table to hold the emails in your inbox. This table should include an id, the subject line, the sender, any additional
recipients, the body of the email, the timestamp, whether or not you have read the email, and the id of the email chain it's in. Also provide commands that
perform the following operations:
A:
CREATE TABLE email (
  id integer,
  subject text,
  sender text,
  recipients text,
  body text,
  timestamp timestamp,
  read boolean,
  chainid integer
);

Add three new emails to the inbox.
A:
INSERT INTO email (id, subject, sender, recipients, body, timestamp, read, chainid)
VALUES
(1, 'New Assignment', 'Bill Johnson', 'entire class', 'Here is your latest homework assignment', TIMESTAMP, FALSE, 100),
(2, 'Fantasy Trade', 'Billy Joe', 'commissioner', 'Hey check out this fantasy football trade I offered you', TIMESTAMP, TRUE, 200),
(3, 'New Job Posting', 'LinkedIn', 'none', 'New position listed in your area', TIMESTAMP, TRUE, 300);

You deleted one of the emails, so write a command to remove the row from the inbox table.
A:
DELETE FROM email WHERE id=2;

You started reading an email but just heard a crash in another room. Mark the email as unread before investigating the crash, so you can come back and read it later.
A:
UPDATE email SET read = FALSE WHERE id=3;
