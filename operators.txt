1. Write out a generic SELECT statement.
A:
SELECT <column1, column2, etc>
FROM <table1, table2, etc>
WHERE <condition>

2. Create a fun way to remember the order of operations in a SELECT statement, such as a mnemonic.
A:
Sunken Chests Fill Tables With Coins

3. Given this dogs table, write queries to select the following pieces of data:

Intake teams typically guess the breed of shelter dogs, so the breed column may have multiple words
(for example, "Labrador Collie mix").

Display the name, gender, and age of all dogs that are part Labrador.
A:
SELECT name, gender, age
FROM dogs
WHERE breed LIKE '%labrador%';

Display the ids of all dogs that are under 1 year old.
A:
SELECT id
FROM dogs
WHERE age < 1;

Display the name and age of all dogs that are female and over 35lbs.
A:
SELECT name, age
FROM dogs
WHERE gender = 'F' AND weight > 35;

Display all of the information about all dogs that are not Shepherd mixes.
A:
SELECT *
FROM dogs
WHERE breed NOT LIKE '%shepard%';

Display the id, age, weight, and breed of all dogs that are either over 60lbs or Great Danes.
SELECT id, age, weight, breed
FROM dogs
WHERE breed LIKE '%dane%' OR weight > 60;

4. Given this cats table, what records are returned from these queries?

SELECT name, adoption_date FROM cats;
A:
name	       adoption_date
Mushi	       2016-03-22T00:00:00.000Z
Seashell	   null
Azul	       2016-04-17T00:00:00.000Z
Victoire	   2016-09-01T00:00:00.000Z
Nala	       null

SELECT name, age FROM cats;
A:
name	   age
Mushi	    1
Seashell	7
Azul	    3
Victoire	7
Nala	    1

5. From the cats table, write queries to select the following pieces of data.
Display all the information about all of the available cats.
A:
SELECT *
FROM cats

Display the name and sex of all cats who are 7 years old.
A:
SELECT name, gender
FROM cats
WHERE age=7;

Find all of the names of the cats, so you don’t choose duplicate names for new cats.
A:
SELECT name
FROM cats;

6. List each comparison operator and explain when you would use it. Include a real world example for each.
If you can’t list these from memory, do these flashcards until you can!
A:
< this checks if a value is less than a given number; age below 7.
> this checks if a value is greater than a given number; height over 60 inches.
<= this checks if a value is equal to or less than a given value. 20 or younger? no beer for you.
>= this checks if a value is greater than or equal to a given value. 21 or older? have a beer!
= this checks a value for equality. Case sensitive when working with text. Is today your birthday?
<> != this checks for inequality. When it's not your birthday don't blow out the candles on the cake.
LIKE this is used to check if a string contains some substring of characters. LIKE '%Prince%' will give you
    Prince, the Artist Formerly Known as Prince, and Prince and the Revolution.
BETWEEN checks if a value is between two boundary conditions. If you're over 12 and under 65 you pay full price.
IS TRUE/IS FALSE checks if a value is true or false. Booked checked out or not.
IS NULL have we ever had a copy of the book at all?
AND used to combine conditionals. All terms must be met. Are you a US citizen AND age > 35 AND been a US resident for 14 years?
You can run for president!
OR used to combine conditionals, any and/or all terms can be met. Do you have a cat or a dog?

7. From the cats table, what data is returned from these queries?
SELECT name FROM cats WHERE gender = ‘F’;
A: after fixing incorrect quotation marks
name
Seashell
Nala

SELECT name FROM cats WHERE age <> 3;
A:

name
Mushi
Seashell
Victoire
Nala

SELECT ID FROM cats WHERE name != ‘Mushi’ AND gender = ‘M’;
A: after fixing incorrect quotation marks
id
3
4
